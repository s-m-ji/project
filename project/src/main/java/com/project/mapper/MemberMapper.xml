<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.MemberMapper">

<!-- 회원 목록 조회 -->
<select id="memberList" resultType="com.project.vo.MemberVo"> 
      
   <![CDATA[select * from (
  select rownum rn, t.* from (
    SELECT m.mno, m.email, m.name, m.nickname, m.pnum,TO_CHAR(m.reg_date, 'YY/MM/DD') reg_dateStr , m.gno, DECODE(m.delYN, 'Y', '신청', '미신청') delYNStr, g.grade, g.benefit
        FROM rec_member m
        JOIN rec_grade g ON m.gno = g.gno
        where mno > 0]]>
        <include refid="criteria"></include>
        order by mno desc 
        ) t
        ) where rn between #{startNo} and #{endNo}
</select>

<!-- 회원 총 건수  -->
<select id="getTotalCnt" resultType="int">
 SELECT count(*)
        FROM rec_member m
        JOIN rec_grade g ON m.gno = g.gno
        <include refid="criteria"></include>
</select>

<!-- 회원 삭제 -->
<delete id="delMem" parameterType="java.lang.String" statementType="PREPARED">
	delete from rec_member where mno = #{mno} and delyn = #{delyn}
</delete>


<!-- 회원 등록  -->
<insert id="adminInput">
<selectKey keyProperty="mno" order="BEFORE" resultType="int">
	select seq_member.nextval from dual
</selectKey>
	insert into rec_member (mno, email, pw, name, nickname, pnum) 
					values (#{mno}, #{email}, #{pw}, #{name}, #{nickname}, #{pnum})
</insert>


<!-- 회원 한 건  -->
<select id="getMemOne" resultType="com.project.vo.MemberVo">
SELECT * FROM REC_MEMBER WHERE MNO= #{mno}
</select>


<!-- 회원 수정 -->
<update id="memberUpdate">
	update rec_member set email =#{email}, pw= #{pw}, name=#{name}, nickname= #{nickname}, pnum= #{pnum}, reg_date = sysdate  where mno = #{mno}
</update>


<!--  공지 조회  -->
<select id="noticeList" resultType="com.project.vo.NoticeVo">
	<![CDATA[SELECT * FROM (
	SELECT ROWNUM RN, T.* FROM (
	SELECT nno, ntitle, ncontent, nwriter, to_char(nregdate, 'YY/MM/DD')as nregdate, gubun FROM REC_NOTICE WHERE NNO >0 ]]>
	<include refid="nCriteria"></include>
	ORDER BY NNO DESC
	) T 
	) WHERE RN BETWEEN #{startNo} and #{endNo}
</select>

<!--  공지 총 건수 -->
<select id="getTotalNcnt" resultType="int">
select count(*) from rec_notice  where 1=1 <include refid="nCriteria"></include>
</select>


<!--  공지 등록  -->
<insert id="noticeWrite">
<selectKey keyProperty="nno" order="BEFORE" resultType="int">
	select seq_notice.nextval from dual
</selectKey>
	insert into REC_NOTICE (nno, nwriter, gubun, ntitle, ncontent) values (#{nno}, #{nwriter}, #{gubun}, #{ntitle}, #{ncontent})
</insert>

<!--  공지 한 건  -->
<select id="noticeOne" resultType="com.project.vo.NoticeVo">
	select * from rec_notice where nno = #{nno}
</select>

<!--  공지 수정  -->
<update id="noticeUpdate">
	update rec_notice 
	set ntitle = #{ntitle}, ncontent =#{ncontent}, gubun= #{gubun}, nregdate = sysdate  where nno = #{nno}
</update>

<!--  공지 삭제  -->
<delete id="noticeDel">
	delete from rec_notice where nno = #{nno}
</delete>


<!-- 공통 검색조건1) 회원  -->
<sql id="criteria">
	<choose>
		<when test="sField  == 'name'">
			and name like '%'||#{sWord}||'%'
		</when>
		<when test="sField  == 'grade'">
			and grade like '%'||#{sWord}||'%' 
		</when>
		<when test="sField  == 'delYN'">
			and delYN like '%'||#{sWord}||'%' 
		</when>
	</choose>
</sql>  

<!-- 공통 검색조건2) 공지  -->
<sql id="nCriteria">
	<choose>
		<when test="sField  == '일반'">
			and gubun like '%일반%'
		</when>
		<when test="sField  == '이벤트'">
			and gubun like '%이벤트%'
		</when>
		<when test="sField  == '자주 묻는 질문'">
			and gubun like '%자주 묻는 질문%'
		</when>
	</choose>
</sql>  

<!--  리워드 조회  -->
<select id="rewardList" resultType="com.project.vo.MemberVo">
	<![CDATA[select E.*
	FROM (
	SELECT 
	m.mno
	, m.name
	, m.nickname
	, COUNT(b.b_no) AS b_no
	, SUM(b.viewcnt) AS viewcnt
	, MAX(b.regdate) AS regdate
	, DECODE(m.delyn, 'Y', '신청', '미신청') delYNStr
	, g.grade
	, g.benefit
	,
	       RANK() OVER (ORDER BY SUM(b.viewcnt) DESC , MAX(b.regdate) asc) AS reward
	FROM rec_member m 
	JOIN rec_grade g ON m.gno = g.gno 
	JOIN rec_board b ON b.mno = m.mno
	WHERE b.regdate BETWEEN #{startDate} AND #{endDate}
	and m.delyn = 'N'
	GROUP BY m.mno,  m.delyn, m.name, m.nickname, g.grade, g.benefit) E
	WHERE ROWNUM  <= 4]]>
</select>

<!-- 리워드 수정  -->
<update id="gradeUpdate">
	UPDATE REC_MEMBER SET gno = #{gno} where mno = #{mno}
</update>

<!-- 리워드 목록 조회 (2) -->
<select id="rewardListReal" resultType="com.project.vo.MemberVo">
<![CDATA[select E.*
	FROM (
	SELECT 
	m.mno
	, m.name
	, m.nickname
	, COUNT(b.b_no) AS b_no
	, SUM(b.viewcnt) AS viewcnt
	, MAX(b.regdate) AS regdate
	, DECODE(m.delyn, 'Y', '신청', '미신청') delYNStr
	, g.grade
	, g.benefit
	,
	       RANK() OVER (ORDER BY SUM(b.viewcnt) DESC , MAX(b.regdate) asc) AS 순위
	FROM rec_member m 
	JOIN rec_grade g ON m.gno = g.gno 
	JOIN rec_board b ON b.mno = m.mno
	GROUP BY m.mno,  m.delyn, m.name, m.nickname, g.grade, g.benefit) E
	WHERE ROWNUM  <= 10]]>
</select>





	<!-- 광민 -->
	<select id="login" resultType="com.project.vo.MemberVo">
		select * from rec_member where email=#{email}
	</select>
	
	<insert id="insert">
	insert into rec_member(mno, email, pw, name, nickname, pnum) 
		values (seq_member.nextval, #{email}, #{pw}, #{name}, #{nickname}, #{pnum})
	</insert>
	
	<select id="emailCheck" resultType="int">
	select count(*) 
	  from rec_member 
	 where email=#{email}
	</select>
	
	<select id="nicknameCheck" resultType="int">
	select count(*) 
	  from rec_member 
	 where nickname=#{nickname}
	</select>
	
	<select id="findEmailBy" resultType="String">
	select email 
	  from rec_member 
	 where name=#{name} and pNum=#{pnum}
	</select>
	
	<select id="sendPwBy" resultType="String">
	select pw 
	  from rec_member 
	 where email=#{email} and name=#{name}
	</select>
	
	<update id="updatePassword" parameterType="map">
	    UPDATE rec_member
	    SET pw = #{encodedPassword}
	    WHERE email = #{email}
	</update>
	
	<select id="emailExists" resultType="Boolean">
	select count(*) 
	  from rec_member 
	 where email=#{email}
	</select>

</mapper>